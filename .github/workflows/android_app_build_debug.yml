name: Android Build Debug and Upload
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true  # cancel any previous runs

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      ANDROID_APP_PATH: "sample/application"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: check for android project
        run: |
          if [ -f "${{env.ANDROID_APP_PATH}}/build.gradle" ] || [ -f "${{env.ANDROID_APP_PATH}}/build.gradle.kts" ]; then
            echo "Android project found"
            if [ -n "$(find "${{env.ANDROID_APP_PATH}}/app/src/main/java" -name "*.kt" -type f)" ]; then
              echo "Module app is written in Kotlin"
              exit 1
            else
              echo "Module app is written in Java"
            fi
          else
            echo "No Android project found"
            exit 1
          fi

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      - name: Build debug apk
        run: |
          chmod +x "${{env.ANDROID_APP_PATH}}/gradlew"
          "${{env.ANDROID_APP_PATH}}/gradlew" assembleDebug -p "${{env.ANDROID_APP_PATH}}"

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache-new
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
            $ANDROID_HOME/emulator/*
          key: avd-eval-test-new

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache-new.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: "test"
          api-level: 29
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: tests 1
        run: |
          echo $ANDROID_HOME
          ls -a $ANDROID_HOME
          echo "########"
          echo $ANDROID_HOME/cmdline-tools
          ls -a $ANDROID_HOME/cmdline-tools
          echo "########"
          echo $ANDROID_HOME/cmdline-tools/latest
          ls -a $ANDROID_HOME/cmdline-tools/latest
          echo "########"
          echo .android
          ls -a ~/.android

      - name: Setup & Start Emulator
        timeout-minutes: 10
        run: |
          bash .github/scripts/setup_emulators.sh

      - name: tests 3
        run: |
          echo "########"
          find "$ANDROID_HOME" -name "*emulator*" -print

      - name: Run tests
        run: |
          "${{env.ANDROID_APP_PATH}}/gradlew" connectedCheck -p "${{env.ANDROID_APP_PATH}}"

      - name: Kill Emulator
        run: $ANDROID_HOME/platform-tools/adb -s emulator-5554 emu kill
