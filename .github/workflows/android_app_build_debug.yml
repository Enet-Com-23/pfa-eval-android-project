name: Android Build Debug and Upload

on:
  push:
    branches:
      - dev
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.branch }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      ANDROID_APP_PATH: "sample/application"

    steps:
      - uses: actions/checkout@v3

      # Check if the application folder contains an Android project
      - name: Check for Android project
        run: |
          if [ -f "${{env.ANDROID_APP_PATH}}/build.gradle" ]; then
            echo "Android project found"
          else
            echo "No Android project found"
            exit 1
          fi

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant gradlew permission
        run: chmod +x ${{env.ANDROID_APP_PATH}}/gradlew

      # Build the debug apk
      - name: Build debug apk
        run: ./${{env.ANDROID_APP_PATH}}/gradlew assembleDebug -p ${{env.ANDROID_APP_PATH}}

      - name: Install Android SDK
        run: |
             mkdir -p $HOME/android/sdk
             wget -q https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip -O sdk-tools.zip
             unzip -qq sdk-tools.zip -d $HOME/android/sdk
             echo "export ANDROID_SDK_ROOT=$HOME/android/sdk" >> $HOME/.bashrc
             echo "export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools" >> $HOME/.bashrc
             yes | sdkmanager --licenses >/dev/null
             sdkmanager "platform-tools" "platforms;android-30" "emulator"

      - name: Create AVD
        run: |
            echo "no" | avdmanager --verbose create avd --force --name "test_emulator" --package "system-images;android-30;google_apis;x86_64" --tag "google_apis" --abi "x86_64" --device "pixel"
      - name: Start Emulator
        run: emulator -avd test_emulator -no-audio -no-window -accel on
        
      
      - name: Run instrumented tests
        run: ./${{env.ANDROID_APP_PATH}}/gradlew connectedAndroidTest -p ${{env.ANDROID_APP_PATH}}
        continue-on-error: true
